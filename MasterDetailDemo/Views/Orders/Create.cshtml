@model MasterDetailDemo.ViewModels.OrderViewModel

@{
  ViewBag.Title = "title";
}

@*Desing Bootdtrap Modal With Order Form*@

<div class="" id="newOrderModal">
  <div class="" style=" width: 900px !important;">
    <div class="">
      <div class="">
        <h4 class="text-center">Add New Order</h4>
      </div>
      <form id="NewOrderForm">
        <div class="modal-body">
          @*Customer Details*@
          @*<h5 style="" class="text-center">Customer Details</h5>
            <hr />*@
          <div class="form-horizontal">
            <input type="hidden" id="CustomerId" />
            <div class="form-group">
              <label class="control-label col-md-2">Customer Name</label>
              <div class="col-md-4">
                <input type="text" id="name" name="name" placeholder="Customer Name" class="form-control" required />
              </div>
              <label class="control-label col-md-2">Address</label>
              <div class="col-md-4">
                <input type="text" id="address" name="address" placeholder="Customer Address" class="form-control" />
              </div>
            </div>
          </div>
          <hr />
          @*Order Details*@
          <h5 style="margin-top:10px;" class="text-center">Order Details</h5>
          <hr />
          <div class="form-horizontal">
            <input type="hidden" id="OrderId" />
            <div class="form-group">
              <label class="control-label col-md-2">Product Name</label>
              <div class="col-md-4">
                <input type="text" id="productName" name="productName" placeholder="Product Name" class="form-control" />
              </div>
              <label class="control-label col-md-2">Price</label>
              <div class="col-md-4">
                <input type="number" id="price" name="price" placeholder="Product Price" class="form-control" />
              </div>
            </div>

            <div class="form-group">
              <label class="control-label col-md-2">Quantity</label>
              <div class="col-md-4">
                <input type="number" id="quantity" name="quantity" placeholder="Quantity" class="form-control" />
              </div>
              <div class="col-md-2 col-lg-offset-4">
                <a id="addToList" class="btn btn-primary">Add To List</a>
              </div>
            </div>
            <hr />
            <table id="detailsTable" class="table">
              <thead>
                <tr>
                  <th style="width:30%">Product</th>
                  <th style="width:20%">Unit Price</th>
                  <th style="width:15%">Quantity</th>
                  <th style="width:25%">Amount</th>
                  <th style="width:10%"></th>
                </tr>
              </thead>
              <tbody></tbody>
            </table>
          </div>
        </div>
        <div class="">
          <button id="saveOrder" type="submit" class="btn btn-danger">Save Order</button>
        </div>
      </form>
    </div>
  </div>
</div>

@section scripts{
  <script>
    //Show Modal.
    function addNewOrder() {
      //$("#newOrderModal").modal();
    }
    //Add Multiple Order.
    $("#addToList").click(function (e) {
      e.preventDefault();

      debugger;
      if ($.trim($("#productName").val()) === "" || $.trim($("#price").val()) === "" || $.trim($("#quantity").val()) === "") return;

      var productName = $("#productName").val(),
        price = $("#price").val(),
        quantity = $("#quantity").val(),
        detailsTableBody = $("#detailsTable tbody");

      var productItem = '<tr><td>' + productName + '</td><td>' + quantity + '</td><td>' + price + '</td><td>' + (parseFloat(price) * parseInt(quantity)) + '</td><td><a data-itemId="0" href="#" class="deleteItem">Remove</a></td></tr>';
      detailsTableBody.append(productItem);
      clearItem();
    });
    //After Add A New Order In The List, Clear Clean The Form For Add More Order.
    function clearItem() {
      $("#productName").val('');
      $("#price").val('');
      $("#quantity").val('');
    }
    // After Add A New Order In The List, If You Want, You Can Remove It.
    $(document).on('click', 'a.deleteItem', function (e) {
      debugger;

      e.preventDefault();
      if ($(this).attr('data-itemId') === "0") {
        $(this).parents('tr').css("background-color", "#ff6347").fadeOut(800, function () {
          $(this).remove();
        });
      }
    });
    //After Click Save Button Pass All Data View To Controller For Save Database
    function saveOrder(data) {
      debugger;

      return $.ajax({
        contentType: 'application/json; charset=utf-8',
        dataType: 'json',
        type: 'POST',
        url: "/Orders/SaveOrder",
        data: data,
        success: function (result) {
          alert(result);
          location.reload();
        },
        error: function () {
          alert("Error!");
        }
      });
    }
    //Collect Multiple Order List For Pass To Controller
    $("#saveOrder").click(function (e) {
      e.preventDefault();
      debugger;

      var orderArr = [];
      orderArr.length = 0;

      $.each($("#detailsTable tbody tr"), function () {
        debugger;

        orderArr.push({
          productName: $(this).find('td:eq(0)').html(),
          quantity: $(this).find('td:eq(1)').html(),
          price: $(this).find('td:eq(2)').html(),
          amount: $(this).find('td:eq(3)').html()
        });
      });


      var data = JSON.stringify({
        name: $("#name").val(),
        address: $("#address").val(),
        order: orderArr
      });

      $.when(saveOrder(data)).then(function (response) {
        console.log(response);
      }).fail(function (err) {
        console.log(err);
      });
    });
  </script>
}
